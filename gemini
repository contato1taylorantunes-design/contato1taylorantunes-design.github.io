<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NASA Space Apps: Meteor Madness Simulator</title>
    
    <style>
        :root {
            --cor-principal: #007bff; /* Azul NASA */
            --cor-fundo: #1c1c1c; /* Fundo Escuro */
            --cor-texto: #e0e0e0;
            --cor-acento: #ffc107; /* Amarelo de Alerta */
        }
        
        body {
            font-family: 'Arial', sans-serif;
            background-color: var(--cor-fundo);
            color: var(--cor-texto);
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        
        header {
            background-color: #000;
            padding: 20px;
            text-align: center;
            border-bottom: 3px solid var(--cor-principal);
        }
        
        header h1 {
            margin: 0;
            font-size: 1.8em;
            color: var(--cor-principal);
        }

        .container {
            display: flex;
            max-width: 1200px;
            margin: 20px auto;
            gap: 20px;
            flex-grow: 1;
        }

        .painel-lateral {
            flex: 1;
            background-color: #2a2a2a;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
            height: fit-content;
        }

        .area-principal {
            flex: 2.5;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        /* Se√ß√£o de Visualiza√ß√£o (Mapa/Orbital) */
        #visualizacao {
            background-color: #333;
            height: 400px;
            border-radius: 8px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 1.5em;
            border: 2px solid var(--cor-texto);
        }

        /* Se√ß√£o de Resultados */
        #resultados {
            background-color: #2a2a2a;
            padding: 15px;
            border-radius: 8px;
            border-left: 5px solid var(--cor-acento);
        }

        #resultados h2 {
            color: var(--cor-acento);
            margin-top: 0;
        }

        /* Estilo para Formul√°rio e Bot√£o */
        label {
            display: block;
            margin-top: 10px;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input[type="number"] {
            width: 90%;
            padding: 8px;
            border: 1px solid #555;
            border-radius: 4px;
            background-color: #444;
            color: var(--cor-texto);
        }

        button {
            width: 100%;
            padding: 10px;
            margin-top: 20px;
            background-color: var(--cor-principal);
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 1.1em;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #0056b3;
        }

        footer {
            text-align: center;
            padding: 10px;
            margin-top: auto;
            background-color: #000;
            color: #666;
            font-size: 0.8em;
        }
    </style>
</head>
<body>
    <header>
        <h1>Simulador de Impacto: Impactor-2025</h1>
        <p>NASA Space Apps Challenge: Meteor Madness</p>
    </header>

    <div class="container">
        <div class="painel-lateral">
            <h2>Configura√ß√µes da Simula√ß√£o</h2>
            <form id="simulador-form">
                <label for="tamanho">Tamanho do Asteroide (metros):</label>
                <input type="number" id="tamanho" value="30" min="1" required>

                <label for="velocidade">Velocidade de Entrada (km/s):</label>
                <input type="number" id="velocidade" value="20" min="1" required>

                <label for="angulo">√Çngulo de Entrada (graus):</label>
                <input type="number" id="angulo" value="45" min="1" max="90" required>
                
                <label for="localizacao">Local de Impacto (Lat/Lon ou Cidade):</label>
                <input type="text" id="localizacao" value="Nova York, EUA">

                <button type="submit">RODAR SIMULA√á√ÉO</button>
            </form>
        </div>

        <div class="area-principal">
            <div id="visualizacao">
                <p>Aqui voc√™ ir√° renderizar o Mapa de Impacto ou a Trajet√≥ria Orbital.<br> (Use bibliotecas como Leaflet/Mapbox para mapas ou Three.js/D3.js para visualiza√ß√µes orbitais.)</p>
            </div>

            <div id="resultados">
                <h2>Resultados e Consequ√™ncias</h2>
                <p id="output-consequencias">Pressione "RODAR SIMULA√á√ÉO" para ver os resultados e as estrat√©gias de mitiga√ß√£o sugeridas.</p>
                
                <div id="estrategias-mitigacao" style="margin-top: 15px;">
                    <h3>Estrat√©gias de Mitiga√ß√£o:</h3>
                    <ul id="lista-mitigacao">
                        <li>*Espa√ßo para resultados de an√°lise de risco e propostas de desvio/defesa planet√°ria.*</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <footer>
        <p>Criado para o NASA Space Apps Challenge 2025.</p>
    </footer>

    <script>
        const form = document.getElementById('simulador-form');
        const outputConsequencias = document.getElementById('output-consequencias');
        const listaMitigacao = document.getElementById('lista-mitigacao');
        const vizArea = document.getElementById('visualizacao');

        form.addEventListener('submit', function(e) {
            e.preventDefault(); // Impede o recarregamento da p√°gina

            // 1. OBTENHA OS VALORES DO FORMUL√ÅRIO
            const tamanho = document.getElementById('tamanho').value;
            const velocidade = document.getElementById('velocidade').value;
            const angulo = document.getElementById('angulo').value;
            const localizacao = document.getElementById('localizacao').value;

            // 2. CHAME SUA FUN√á√ÉO DE SIMULA√á√ÉO AQUI
            // ESTE √â O CORA√á√ÉO DO SEU PROJETO DE HACKATHON!
            runSimulation(tamanho, velocidade, angulo, localizacao);
        });

        function runSimulation(tamanho, velocidade, angulo, localizacao) {
            // Limpa resultados anteriores
            listaMitigacao.innerHTML = '';
            vizArea.innerHTML = '<h2>PROCESSANDO DADOS...</h2>';
            outputConsequencias.textContent = `Rodando simula√ß√£o para impacto em ${localizacao} (Tamanho: ${tamanho}m)...`;

            // ----------------------------------------------------------------
            // üöÄ ESTE √â ONDE VOC√ä COLOCA O C√ìDIGO MAIS IMPORTANTE:
            // - API calls para dados de asteroides e geogr√°ficos (NASA/USGS).
            // - Modelos matem√°ticos para calcular a energia de impacto e a √°rea afetada.
            // - C√≥digo para gerar a visualiza√ß√£o din√¢mica (Mapa ou 3D).
            // ----------------------------------------------------------------

            // Exemplo de Sa√≠da (Mockup)
            setTimeout(() => {
                vizArea.innerHTML = '<p>Visualiza√ß√£o de Impacto Renderizada!</p>'; 
                
                outputConsequencias.textContent = `SIMULA√á√ÉO CONCLU√çDA! O impacto de ${tamanho}m em ${localizacao} resultaria em um raio de destrui√ß√£o de 20km e um tsunami costeiro.`;

                listaMitigacao.innerHTML = `
                    <li>Alerta P√∫blico Imediato (Baseado em coordenadas).</li>
                    <li>Estrat√©gia de Desvio por Impactor Cin√©tico (Requer 3 anos de prepara√ß√£o).</li>
                    <li>Plano de Evacua√ß√£o Regional para 5 milh√µes de pessoas.</li>
                `;
            }, 2000); // Atraso de 2 segundos para simular processamento
        }

        // Chamada inicial para carregar a interface
        console.log('Template do Simulador Carregado. Pronto para codificar a l√≥gica do Meteor Madness!');
    </script>
</body>
</html>